// <auto-generated />
using System;
using DataAccessLayer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(SWDContext))]
    partial class SWDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlogProductInfo", b =>
                {
                    b.Property<int>("BlogsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductInfosId")
                        .HasColumnType("int");

                    b.HasKey("BlogsId", "ProductInfosId");

                    b.HasIndex("ProductInfosId");

                    b.ToTable("BlogProductInfo");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.DiscountPr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DiscountPr", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ProductInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductInfoId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ImportBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ImportBill", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.ImportBillDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("date");

                    b.Property<int>("ImportBillId")
                        .HasColumnType("int");

                    b.Property<decimal>("ImportPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductInfoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImportBillId");

                    b.HasIndex("ProductInfoId");

                    b.ToTable("ImportBillDetails");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceivingAddressId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("TotalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("ReceivingAddressId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DataAccessLayer.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PaymentMethod", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.ProductInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("MainImage")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInfo", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.ReceivingAddress", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("ReceivingAddress", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Style", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Style", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserName" }, "UQ__Users__C9F28456F0915254")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiscountProductInfo", b =>
                {
                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("ProductInfoId")
                        .HasColumnType("int");

                    b.HasKey("DiscountId", "ProductInfoId")
                        .HasName("PK__Discount__93A09325698C3CAA");

                    b.HasIndex("ProductInfoId");

                    b.ToTable("DiscountProductInfo", (string)null);
                });

            modelBuilder.Entity("StyleCategory", b =>
                {
                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("StyleId", "CategoryId")
                        .HasName("PK__StyleCat__2B41D5E027AD4D32");

                    b.HasIndex("CategoryId");

                    b.ToTable("StyleCategory", (string)null);
                });

            modelBuilder.Entity("StyleProductInfo", b =>
                {
                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.Property<int>("ProductInfoId")
                        .HasColumnType("int");

                    b.HasKey("StyleId", "ProductInfoId")
                        .HasName("PK__StylePro__FD4EB8F3B406AFC4");

                    b.HasIndex("ProductInfoId");

                    b.ToTable("StyleProductInfo", (string)null);
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK__UserRole__AF2760AD637F830C");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("BlogProductInfo", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Blog", null)
                        .WithMany()
                        .HasForeignKey("BlogsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Models.ProductInfo", null)
                        .WithMany()
                        .HasForeignKey("ProductInfosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Models.Image", b =>
                {
                    b.HasOne("DataAccessLayer.Models.ProductInfo", "ProductInfo")
                        .WithMany("Images")
                        .HasForeignKey("ProductInfoId")
                        .HasConstraintName("FK__Images__ProductI__5AEE82B9");

                    b.Navigation("ProductInfo");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ImportBill", b =>
                {
                    b.HasOne("DataAccessLayer.Models.User", "User")
                        .WithMany("ImportBills")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__ImportBil__UserI__693CA210");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ImportBillDetail", b =>
                {
                    b.HasOne("DataAccessLayer.Models.ImportBill", "ImportBill")
                        .WithMany("ImportBillDetails")
                        .HasForeignKey("ImportBillId")
                        .IsRequired()
                        .HasConstraintName("FK__ImportBil__Impor__6C190EBB");

                    b.HasOne("DataAccessLayer.Models.ProductInfo", "ProductInfo")
                        .WithMany("ImportBillDetails")
                        .HasForeignKey("ProductInfoId")
                        .IsRequired()
                        .HasConstraintName("FK__ImportBil__Produ__6D0D32F4");

                    b.Navigation("ImportBill");

                    b.Navigation("ProductInfo");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Orders__Customer__7A672E12");

                    b.HasOne("DataAccessLayer.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentMethodId")
                        .HasConstraintName("FK__Orders__PaymentM__7C4F7684");

                    b.HasOne("DataAccessLayer.Models.ReceivingAddress", "ReceivingAddress")
                        .WithMany("Orders")
                        .HasForeignKey("ReceivingAddressId")
                        .HasConstraintName("FK__Orders__Receivin__7B5B524B");

                    b.Navigation("Customer");

                    b.Navigation("PaymentMethod");

                    b.Navigation("ReceivingAddress");
                });

            modelBuilder.Entity("DataAccessLayer.Models.OrderDetail", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderDeta__Order__00200768");

                    b.HasOne("DataAccessLayer.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__OrderDeta__Produ__7F2BE32F");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataAccessLayer.Models.PaymentMethod", b =>
                {
                    b.HasOne("DataAccessLayer.Models.User", "User")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__PaymentMe__UserI__778AC167");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ProductInfo", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Product", "Product")
                        .WithMany("ProductInfos")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ProductIn__Produ__6FE99F9F");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ReceivingAddress", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Customer", "Customer")
                        .WithMany("ReceivingAddresses")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Receiving__Custo__74AE54BC");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DiscountProductInfo", b =>
                {
                    b.HasOne("DataAccessLayer.Models.DiscountPr", null)
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .IsRequired()
                        .HasConstraintName("FK__DiscountP__Disco__571DF1D5");

                    b.HasOne("DataAccessLayer.Models.ProductInfo", null)
                        .WithMany()
                        .HasForeignKey("ProductInfoId")
                        .IsRequired()
                        .HasConstraintName("FK__DiscountP__Produ__5812160E");
                });

            modelBuilder.Entity("StyleCategory", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__StyleCate__Categ__66603565");

                    b.HasOne("DataAccessLayer.Models.Style", null)
                        .WithMany()
                        .HasForeignKey("StyleId")
                        .IsRequired()
                        .HasConstraintName("FK__StyleCate__Style__656C112C");
                });

            modelBuilder.Entity("StyleProductInfo", b =>
                {
                    b.HasOne("DataAccessLayer.Models.ProductInfo", null)
                        .WithMany()
                        .HasForeignKey("ProductInfoId")
                        .IsRequired()
                        .HasConstraintName("FK__StyleProd__Produ__60A75C0F");

                    b.HasOne("DataAccessLayer.Models.Style", null)
                        .WithMany()
                        .HasForeignKey("StyleId")
                        .IsRequired()
                        .HasConstraintName("FK__StyleProd__Style__5FB337D6");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__RoleI__5070F446");

                    b.HasOne("DataAccessLayer.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__UserI__4F7CD00D");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ReceivingAddresses");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ImportBill", b =>
                {
                    b.Navigation("ImportBillDetails");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("DataAccessLayer.Models.PaymentMethod", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("ProductInfos");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ProductInfo", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("ImportBillDetails");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ReceivingAddress", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Navigation("ImportBills");

                    b.Navigation("PaymentMethods");
                });
#pragma warning restore 612, 618
        }
    }
}
